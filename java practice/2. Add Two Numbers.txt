//2. Add Two Numbers


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode node1 = l1;
        ListNode node2 = l2;

        int s=0;
        ListNode head=null;
        while(node1!=null||node2!=null){
            int a =(node1!=null)? node1.val:0;
            int b =(node2!=null)? node2.val:0;
            int num = a+b;
            
            if (s > 0) {
                num += 1;
                s = 0;
            }

            if (num > 9) {
                num = num % 10;
                s = 1;
            }
            ListNode node = new ListNode(num);
            node.next = head;
            head = node;

            if (node1 != null) node1 = node1.next;
            if (node2 != null) node2 = node2.next;
        }
        if (s > 0) {
            ListNode node = new ListNode(1);
            node.next = head;
            head = node;
        }
        ListNode prev = null;
        ListNode present = head;
        ListNode next = present.next;
        while(present!=null){
            present.next = prev;
            prev = present;
            present = next;
            if(next!=null){
                next = next.next;
            }
        }
        head = prev;
        return head;
    }
}